name: Pull Request checks

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
  SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
  SNOWSQL_PWD: ${{ secrets.SNOWSQL_PWD }}
  SNOWSQL_DATABASE: ${{ secrets.SNOWSQL_DATABASE }}
  SNOWSQL_SCHEMA: ${{ secrets.SNOWSQL_SCHEMA }}
  SNOWSQL_WAREHOUSE: ${{ secrets.SNOWSQL_WAREHOUSE }}

defaults:
  run:
    shell: bash -el {0}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          python -c "from ctypes.util import find_library; path = find_library('crypto'); from cffi import FFI; vffi = FFI(); vffi.cdef('const char *OpenSSL_version(int type);'); version_string = vffi.string(vffi.dlopen(path).OpenSSL_version(0)).decode('utf-8'); print(version_string)"

      - run: |  
          python -c "from ctypes.util import find_library; path = find_library('crypto'); from cffi import FFI; vffi = FFI(); vffi.cdef('const char *SSLeay_version(int type);'); version_string = vffi.string(vffi.dlopen(path).SSLeay_version(0)).decode('utf-8'); print(version_string)"
      
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: snowpark
          environment-file: environment.yml
      
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev 

      - run: |
          python -c "from ctypes.util import find_library; path = find_library('crypto'); from cffi import FFI; vffi = FFI(); vffi.cdef('const char *OpenSSL_version(int type);'); version_string = vffi.string(vffi.dlopen(path).OpenSSL_version(0)).decode('utf-8'); print(version_string)"

      - run: |  
          python -c "from ctypes.util import find_library; path = find_library('crypto'); from cffi import FFI; vffi = FFI(); vffi.cdef('const char *SSLeay_version(int type);'); version_string = vffi.string(vffi.dlopen(path).SSLeay_version(0)).decode('utf-8'); print(version_string)"

      - name: Run tests
        run: python -m pytest 

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: snowpark
          environment-file: environment.yml
      
      - name: Install dependencies
        run: pip install pylint
      
      - name: Analysing the code with pylint
        run: pylint $(git ls-files '*.py')
